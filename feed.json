{
  "version": "https://jsonfeed.org/version/1",
  "title": "Chris Paraiso",
  "home_page_url": "/",
  "feed_url": "/feed.json",
  "description": "A minimal hugo theme focus on content",
  "favicon": "//assets/favicon.ico",
  "expired": false,
  "author": {
    "name": "Chris Paraiso",
    "url": "/"
  },
  "items": [
    
    

    
    {
      "id": "25d9c85df254405bf11199a124d1e704ce6ccee8",
      "title": "Preserving Quotes in YAML",
      "summary": "",
      "content_text": "For a bit of context, I\u0026rsquo;m working on a project that spits out a YAML file that has properties with UUIDs. These UUIDs are linked to different text files and image files. The goal was to have some kind of web component consisting of an SVG with a text overlay. The text was separated out for third-party localization.\nI wrote a Python script and successfully populated the YAML file with what I needed for now.\nid: 5214484c-42d2-11ee-bb4b-a0cec89b3edd type: \u0026#34;graphic\u0026#34; subtype: \u0026#34;\u0026#34; metadata: media-not-started: \u0026#34;false\u0026#34; title: \u0026#34;\u0026#34; transcript: \u0026#34;\u0026#34; assets: - 52117bbc-42d2-11ee-bb4b-a0cec89b3edd - 521285a2-42d2-11ee-bb4b-a0cec89b3edd - 5213159e-42d2-11ee-bb4b-a0cec89b3edd ui: instructions: \u0026#34;\u0026#34; images: [] svgs: - text1: 52117bbc-42d2-11ee-bb4b-a0cec89b3edd text2: 521285a2-42d2-11ee-bb4b-a0cec89b3edd text3: 5213159e-42d2-11ee-bb4b-a0cec89b3edd file: \u0026#34;\u0026#34; caption: \u0026#34;\u0026#34; ratio: \u0026#34;822/861\u0026#34; stylesheet: 5214b930-42d2-11ee-bb4b-a0cec89b3edd Every UUID seen here has a corresponding directory, YAML file and markdown file with the same UUID. For example, the property of text1 would have:\n52117bbc-42d2-11ee-bb4b-a0cec89b3edd/ #directory | |-- 52117bbc-42d2-11ee-bb4b-a0cec89b3edd.yml | +-- 52117bbc-42d2-11ee-bb4b-a0cec89b3edd.md But there\u0026rsquo;s an issue. If you take a look at the YAML file, some properties are wrapped in double quotes and some are not. All values in the YAML file need to be surrounded by double quotes for my situation.\nInitially, I went with PyYaml\u0026rsquo;s library to assist me in wrangling YAML with Python. Everything was working well up until this point. Diving into the docs I can tell some programmers find documentation hard because it did not help at all. How can I RTFM if the manual is useless? Dive into the source code? I really shouldn\u0026rsquo;t need to do that for something so simple as this. Even, after diving through the source code, it was still unclear.\nTip: When writing technical documentation, imagine yourself as NOT the person who developed it. Also, imagine you\u0026rsquo;re explaining it to your mom. Thanks.\nAfter a bit of research, I switched to ruamel.yaml\u0026rsquo;s Python library. The API was similar for my needs and the source code was easy to navigate. Refactoring was minimal and it solved my missing double quote issue.\nfrom ruamel.yaml import YAML # 1 from ruamel.yaml.scalarstring import DoubleQuotedScalarString # 2 yaml = YAML() yaml.preserve_quotes = True # 3 def media_insert_text_field(fields: List[Dict]) -\u0026gt; Tuple: assets = [] ui = {} for field in fields: # 4 double_quoted_scalar = DoubleQuotedScalarString(field[\u0026#39;uuid\u0026#39;]) assets.append(double_quoted_scalar) ui[f\u0026#34;text{field[\u0026#39;index\u0026#39;]}\u0026#34;] = double_quoted_scalar return (assets, ui) ... Load ruamel.yaml.\nImport DoubleQuotedScalarString to force double quotes on scalar types.\nSet preserve_quotes to true.\nForce double quotes on field['uuid'] with DoubleQuotedScalarString.\nYou may be asking yourself why I needed DoubleQuotedScalarString if preserve_quotes was set to true. I\u0026rsquo;m still asking myself that question. Data was triple checked and followed the same format as the other properties I\u0026rsquo;m injected in the final YAML so I\u0026rsquo;m not sure why. But ruamel.yaml made it easy to force it. That\u0026rsquo;s all that matters to me.\nI\u0026rsquo;ll end by reiterating a tip to write technical documentation like your mom will be reading it. (Not that I\u0026rsquo;m a mother, but you get the gist.)\n",
      "content_html": "\u003cp\u003eFor a bit of context, I\u0026rsquo;m working on a project that spits out a YAML file that has properties with UUIDs. These UUIDs are linked to different text files and image files. The goal was to have some kind of web component consisting of an SVG with a text overlay. The text was separated out for third-party localization.\u003c/p\u003e\n\u003cp\u003eI wrote a Python script and successfully populated the YAML file with what I needed for now.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#e0def4;background-color:#191724;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ebbcba\"\u003eid\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e5214484c-42d2-11ee-bb4b-a0cec89b3edd\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ebbcba\"\u003etype\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e\u0026#34;graphic\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ebbcba\"\u003esubtype\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ebbcba\"\u003emetadata\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ebbcba\"\u003emedia-not-started\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e\u0026#34;false\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ebbcba\"\u003etitle\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ebbcba\"\u003etranscript\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ebbcba\"\u003eassets\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e- \u003cspan style=\"color:#f6c177\"\u003e52117bbc-42d2-11ee-bb4b-a0cec89b3edd\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e- \u003cspan style=\"color:#f6c177\"\u003e521285a2-42d2-11ee-bb4b-a0cec89b3edd\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e- \u003cspan style=\"color:#f6c177\"\u003e5213159e-42d2-11ee-bb4b-a0cec89b3edd\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ebbcba\"\u003eui\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ebbcba\"\u003einstructions\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ebbcba\"\u003eimages\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ebbcba\"\u003esvgs\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  - \u003cspan style=\"color:#ebbcba\"\u003etext1\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e52117bbc-42d2-11ee-bb4b-a0cec89b3edd\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ebbcba\"\u003etext2\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e521285a2-42d2-11ee-bb4b-a0cec89b3edd\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ebbcba\"\u003etext3\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e5213159e-42d2-11ee-bb4b-a0cec89b3edd\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ebbcba\"\u003efile\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ebbcba\"\u003ecaption\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ebbcba\"\u003eratio\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e\u0026#34;822/861\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ebbcba\"\u003estylesheet\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e5214b930-42d2-11ee-bb4b-a0cec89b3edd\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eEvery UUID seen here has a corresponding directory, YAML file and markdown file with the same UUID. For example, the property of \u003ccode\u003etext1\u003c/code\u003e would have:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#e0def4;background-color:#191724;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f6c177\"\u003e52117bbc-42d2-11ee-bb4b-a0cec89b3edd/\u003c/span\u003e \u003cspan style=\"color:#6e6a86\"\u003e#directory\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f6c177\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f6c177\"\u003e|-- 52117bbc-42d2-11ee-bb4b-a0cec89b3edd.yml\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f6c177\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f6c177\"\u003e+-- 52117bbc-42d2-11ee-bb4b-a0cec89b3edd.md\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBut there\u0026rsquo;s an issue. If you take a look at the YAML file, some properties are wrapped in double quotes and some are not. All values in the YAML file need to be surrounded by double quotes for my situation.\u003c/p\u003e\n\u003cp\u003eInitially, I went with PyYaml\u0026rsquo;s library to assist me in wrangling YAML with Python. Everything was working well up until this point. Diving into the docs I can tell some programmers find documentation hard because it did not help at all. How can I RTFM if the manual is useless? Dive into the source code? I really shouldn\u0026rsquo;t need to do that for something so simple as this. Even, after diving through the source code, it was still unclear.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTip\u003c/strong\u003e: When writing technical documentation, imagine yourself as \u003cem\u003e\u003cstrong\u003eNOT\u003c/strong\u003e\u003c/em\u003e the person who developed it. Also, imagine you\u0026rsquo;re explaining it to your mom. Thanks.\u003c/p\u003e\n\u003cp\u003eAfter a bit of research, I switched to ruamel.yaml\u0026rsquo;s Python library. The API was similar for my needs and the source code was easy to navigate. Refactoring was minimal and it solved my missing double quote issue.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#e0def4;background-color:#191724;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#c4a7e7\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#ebbcba\"\u003eruamel.yaml\u003c/span\u003e \u003cspan style=\"color:#c4a7e7\"\u003eimport\u003c/span\u003e \u003cspan style=\"color:#ebbcba\"\u003eYAML\u003c/span\u003e \u003cspan style=\"color:#6e6a86\"\u003e# 1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#c4a7e7\"\u003efrom\u003c/span\u003e \u003cspan style=\"color:#ebbcba\"\u003eruamel.yaml.scalarstring\u003c/span\u003e \u003cspan style=\"color:#c4a7e7\"\u003eimport\u003c/span\u003e \u003cspan style=\"color:#ebbcba\"\u003eDoubleQuotedScalarString\u003c/span\u003e \u003cspan style=\"color:#6e6a86\"\u003e# 2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ebbcba\"\u003eyaml\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ebbcba\"\u003eYAML\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e()\u003c/span\u003e                       \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ebbcba\"\u003eyaml\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#ebbcba\"\u003epreserve_quotes\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#31748f\"\u003eTrue\u003c/span\u003e \u003cspan style=\"color:#6e6a86\"\u003e# 3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#31748f\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#ebbcba\"\u003emedia_insert_text_field\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ebbcba\"\u003efields\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#ebbcba\"\u003eList\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e[\u003c/span\u003e\u003cspan style=\"color:#ebbcba\"\u003eDict\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e])\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#ebbcba\"\u003eTuple\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ebbcba\"\u003eassets\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ebbcba\"\u003eui\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e{}\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#31748f\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#ebbcba\"\u003efield\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003ein\u003c/span\u003e \u003cspan style=\"color:#ebbcba\"\u003efields\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#6e6a86\"\u003e# 4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#ebbcba\"\u003edouble_quoted_scalar\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ebbcba\"\u003eDoubleQuotedScalarString\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ebbcba\"\u003efield\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e[\u003c/span\u003e\u003cspan style=\"color:#f6c177\"\u003e\u0026#39;uuid\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#ebbcba\"\u003eassets\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#ebbcba\"\u003eappend\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ebbcba\"\u003edouble_quoted_scalar\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#ebbcba\"\u003eui\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e[\u003c/span\u003e\u003cspan style=\"color:#f6c177\"\u003ef\u003c/span\u003e\u003cspan style=\"color:#f6c177\"\u003e\u0026#34;text\u003c/span\u003e\u003cspan style=\"color:#f6c177\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#ebbcba\"\u003efield\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e[\u003c/span\u003e\u003cspan style=\"color:#f6c177\"\u003e\u0026#39;index\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e]\u003c/span\u003e\u003cspan style=\"color:#f6c177\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#f6c177\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ebbcba\"\u003edouble_quoted_scalar\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#31748f\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ebbcba\"\u003eassets\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#ebbcba\"\u003eui\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#908caa\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eLoad ruamel.yaml.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eImport \u003ccode\u003eDoubleQuotedScalarString\u003c/code\u003e to force double quotes on scalar types.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSet \u003ccode\u003epreserve_quotes\u003c/code\u003e to \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eForce double quotes on \u003ccode\u003efield['uuid']\u003c/code\u003e with \u003ccode\u003eDoubleQuotedScalarString\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eYou may be asking yourself why I needed \u003ccode\u003eDoubleQuotedScalarString\u003c/code\u003e if \u003ccode\u003epreserve_quotes\u003c/code\u003e was set to \u003ccode\u003etrue\u003c/code\u003e. I\u0026rsquo;m still asking myself that question. Data was triple checked and followed the same format as the other properties I\u0026rsquo;m injected in the final YAML so I\u0026rsquo;m not sure why. But ruamel.yaml made it easy to force it. That\u0026rsquo;s all that matters to me.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;ll end by reiterating a tip to write technical documentation like your mom will be reading it. (Not that I\u0026rsquo;m a mother, but you get the gist.)\u003c/p\u003e\n",
      "url": "/posts/preserving-quotes-in-yaml/",
      "date_published": "25086-25-09T837:2525:00+00:00",
      "date_modified": "25086-25-09T837:2525:00+00:00",
      "author": {
        "name": "Chris Paraiso",
        "url": "/"
      }
    },
    
    {
      "id": "10935aa2733b25625705ae8fb5e57f4167e8cc94",
      "title": "Fighting with venv in Python",
      "summary": "",
      "content_text": "I had a brain fart today. I was developing a personal project in Python and I had some library issues that I was trying to wrap my head around. It turns out, I didn\u0026rsquo;t even have my virtual environment running. I completely forgot.\nSo then I activated it.\nsource .venv/bin/activate Then I thought to myself\u0026hellip;\nI don\u0026rsquo;t want to type that out every single damn time.\nI\u0026rsquo;m lazy. I don\u0026rsquo;t like to type unnecessary things. I switch projects mid-day on multiple occasions at work so there\u0026rsquo;s a bit of a context switch to deal with. If I have to write automation scripts and aliases now to prevent me from typing even the smallest of words, I\u0026rsquo;ll take the time to try to solve that.\nContext issues So I did just that. I set aside some time to try to automate things.\nI wanted a command I could execute (venv). This command would run a script that creates a virtual environment via python3 -m venv .venv. Then it would run source .venv/bin/activate to start the virtual environment.\nWell, every time I ran this script, the directory would be created at the current working directory and the source line ran without error but the virtual environment did not start. The Python interpreter my environment was running was still global at /usr/local/bin/python3. So something is amiss!\nAfter doing a bit of research it turns out that when you want to enter a virtual environment, the virtual environment modifies my shell\u0026rsquo;s variables. An example of this would be modifying my shell\u0026rsquo;s variables to point to the correct Python interpreter.\nAlso, when you run a Bash script, it executes in a different context/subshell. The file and directory changes stuck after the script ran, but the necessary variables I needed for my virtual environment were thrown away as soon as the script finished running.\nSolution I removed the source line from my venv.sh script and just left the script to create the needed files and directories. I would then need to run that source command to enter the virtual environment.\nThen I thought: Why don\u0026rsquo;t I just string the commands together into one alias on my shell? Perfect.\n# aliases.sh alias venv=\u0026#39;$HOME/src/dotfiles/bin/utils/venv.sh \u0026amp;\u0026amp; \\ source .venv/bin/activate\u0026#39; # ... other aliases below here Running the venv alias would execute the venv.sh then run the source command in the context of the shell I am currently in.\n#!/bin/bash # venv.sh # create venv if not exists if [ -d \u0026#34;.venv\u0026#34; ]; then echo \u0026#34;Found .venv. Activating...\u0026#34; else read -p \u0026#34;.venv does not exist. Would you like to \\ create a venv for this directory? (y/n) \u0026#34; response if [ \u0026#34;$response\u0026#34; == \u0026#34;y\u0026#34; ]; then echo \u0026#34;Creating .venv directory @ $PWD\u0026#34; python3 -m venv .venv fi fi If venv.sh finds an existing .venv directory, it does nothing. If the script does not find the .venv directory it prompts the user asking if the script has permission to create it. I know I could probably do without the prompt and just have the script create it. I decided to leave it in for now.\nI guess my issue was with Bash and not venv. Anyway, I think I have to be careful. I\u0026rsquo;ve been getting sidetracked and spending a lot of time configuring my environment. Off to building something!\n",
      "content_html": "\u003cp\u003eI had a brain fart today. I was developing a personal project in Python and I had some library issues that I was trying to wrap my head around. It turns out, I didn\u0026rsquo;t even have my \u003ca href=\"https://docs.python.org/3/library/venv.html\"\u003evirtual environment\u003c/a\u003e running. I completely forgot.\u003c/p\u003e\n\u003cp\u003eSo then I activated it.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esource .venv/bin/activate\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThen I thought to myself\u0026hellip;\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI don\u0026rsquo;t want to type that out every single damn time.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eI\u0026rsquo;m lazy. I don\u0026rsquo;t like to type unnecessary things. I switch projects mid-day on multiple occasions at work so there\u0026rsquo;s a bit of a context switch to deal with. If I have to write automation scripts and aliases now to prevent me from typing even the smallest of words, I\u0026rsquo;ll take the time to try to solve that.\u003c/p\u003e\n\u003ch2 id=\"context-issues\"\u003eContext issues\u003c/h2\u003e\n\u003cp\u003eSo I did just that. I set aside some time to try to automate things.\u003c/p\u003e\n\u003cp\u003eI wanted a command I could execute (\u003ccode\u003evenv\u003c/code\u003e). This command would run a script that creates a virtual environment via \u003ccode\u003epython3 -m venv .venv\u003c/code\u003e. Then it would run \u003ccode\u003esource .venv/bin/activate\u003c/code\u003e to start the virtual environment.\u003c/p\u003e\n\u003cp\u003eWell, every time I ran this script, the directory would be created at the current working directory and the \u003ccode\u003esource\u003c/code\u003e line ran without error but the virtual environment did not start. The Python interpreter my environment was running was still global at \u003ccode\u003e/usr/local/bin/python3\u003c/code\u003e. So something is amiss!\u003c/p\u003e\n\u003cp\u003eAfter doing a bit of research it turns out that when you want to enter a virtual environment, the virtual environment modifies my shell\u0026rsquo;s variables. An example of this would be modifying my shell\u0026rsquo;s variables to point to the correct Python interpreter.\u003c/p\u003e\n\u003cp\u003eAlso, when you run a Bash script, it executes in a different context/subshell. The file and directory changes stuck after the script ran, but the necessary variables I needed for my virtual environment were thrown away as soon as the script finished running.\u003c/p\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eI removed the \u003ccode\u003esource\u003c/code\u003e line from my \u003ccode\u003evenv.sh\u003c/code\u003e script and just left the script to create the needed files and directories. I would then need to run that \u003ccode\u003esource\u003c/code\u003e command to enter the virtual environment.\u003c/p\u003e\n\u003cp\u003eThen I thought: Why don\u0026rsquo;t I just string the commands together into one alias on my shell? Perfect.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#e0def4;background-color:#191724;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#6e6a86\"\u003e# aliases.sh\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ebbcba\"\u003ealias\u003c/span\u003e \u003cspan style=\"color:#ebbcba\"\u003evenv\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#f6c177\"\u003e\u0026#39;$HOME/src/dotfiles/bin/utils/venv.sh \u0026amp;\u0026amp; \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f6c177\"\u003e    source .venv/bin/activate\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#6e6a86\"\u003e# ... other aliases below here\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRunning the \u003ccode\u003evenv\u003c/code\u003e alias would execute the \u003ccode\u003evenv.sh\u003c/code\u003e \u003cstrong\u003ethen\u003c/strong\u003e run the \u003ccode\u003esource\u003c/code\u003e command in the context of the shell I am currently in.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#e0def4;background-color:#191724;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#6e6a86\"\u003e#!/bin/bash\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#6e6a86\"\u003e\u003c/span\u003e\u003cspan style=\"color:#6e6a86\"\u003e# venv.sh\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#6e6a86\"\u003e# create venv if not exists\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#31748f\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e[\u003c/span\u003e -d \u003cspan style=\"color:#f6c177\"\u003e\u0026#34;.venv\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e]\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e;\u003c/span\u003e \u003cspan style=\"color:#31748f\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ebbcba\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e\u0026#34;Found .venv. Activating...\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#31748f\"\u003eelse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ebbcba\"\u003eread\u003c/span\u003e -p \u003cspan style=\"color:#f6c177\"\u003e\u0026#34;.venv does not exist. Would you like to \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f6c177\"\u003e         create a venv for this directory? (y/n) \u0026#34;\u003c/span\u003e response\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#31748f\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e[\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#ebbcba\"\u003e$response\u003c/span\u003e\u003cspan style=\"color:#f6c177\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e\u0026#34;y\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#908caa\"\u003e]\u003c/span\u003e\u003cspan style=\"color:#908caa\"\u003e;\u003c/span\u003e \u003cspan style=\"color:#31748f\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#ebbcba\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#f6c177\"\u003e\u0026#34;Creating .venv directory @ \u003c/span\u003e\u003cspan style=\"color:#ebbcba\"\u003e$PWD\u003c/span\u003e\u003cspan style=\"color:#f6c177\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      python3 -m venv .venv\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#31748f\"\u003efi\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#31748f\"\u003efi\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf \u003ccode\u003evenv.sh\u003c/code\u003e finds an existing \u003ccode\u003e.venv\u003c/code\u003e directory, it does nothing. If the script does not find the \u003ccode\u003e.venv\u003c/code\u003e directory it prompts the user asking if the script has permission to create it. I know I could probably do without the prompt and just have the script create it. I decided to leave it in for now.\u003c/p\u003e\n\u003cp\u003eI guess my issue was with Bash and not venv. Anyway, I think I have to be careful. I\u0026rsquo;ve been getting sidetracked and spending a lot of time configuring my environment. Off to building something!\u003c/p\u003e\n",
      "url": "/posts/fighting-with-venv-in-python/",
      "date_published": "23086-23-09T836:2323:00+00:00",
      "date_modified": "23086-23-09T836:2323:00+00:00",
      "author": {
        "name": "Chris Paraiso",
        "url": "/"
      }
    }
    
  ]
}